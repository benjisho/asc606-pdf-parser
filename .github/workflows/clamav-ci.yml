name: ClamAV Service Test

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/clamav-ci.yml'
      - 'virus-protection/clamav/**'
      - 'asc606-pdf-parser-website/**'
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/clamav-ci.yml'
      - 'virus-protection/clamav/**'
      - 'asc606-pdf-parser-website/**'

jobs:
  clamav-check:
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ${{ github.workspace }}
    services:
      clamav:
        image: clamav/clamav:stable
        options: >-
          --health-cmd="clamdscan --version || exit 1"
          --health-interval=30s
          --health-timeout=10s
          --health-retries=5
        ports:
          - 3310:3310  # Port for ClamAV daemon

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Download Sample PDF
      run: |
        wget -q -O pdf_files_to_parse/sample.pdf https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf || {
          echo "Failed to download sample PDF";
          exit 1;
        }

    # - name: Ensure Docker Compose Services Are Stopped
    #   run: docker compose -f docker-compose.yml -f ./virus-protection/clamav/docker-compose.clamav.yml down -v

    # - name: Stop Existing Containers Using Port 3310
    #   run: |
    #     docker ps --filter "publish=3310" --format "{{.ID}}" | xargs -r docker stop
    #     docker ps -a --filter "publish=3310" --format "{{.ID}}" | xargs -r docker rm

    # - name: Wait for Port 3310 to Be Free
    #   run: |
    #     while sudo lsof -i :3310; do
    #       echo "Port 3310 is still in use, waiting...";
    #       sleep 5;
    #     done
  
    - name: Start ClamAV Container
      run: |
        sudo lsof -i :3310
        netstat -tulpn | grep 3310
        docker compose -f docker-compose.yml -f ./virus-protection/clamav/docker-compose.clamav.yml up --build clamav -d

    - name: Wait for ClamAV to Initialize
      run: |
        echo "Waiting for ClamAV service to be healthy..."
        until [ "`docker inspect -f {{.State.Health.Status}} clamav`" == "healthy" ]; do
          sleep 5;
        done
      shell: bash

    - name: Test ClamAV Scanning on Dummy PDF
      run: |
        clamdscan --fdpass dummy.pdf | tee scan_output.log
        if grep -q "OK$" scan_output.log; then
          echo "ClamAV scan passed successfully!"
        else
          echo "ClamAV scan failed!" && exit 1
        fi
      shell: bash
