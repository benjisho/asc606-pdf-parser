name: Docker Image CI/CD

# Define the events that trigger this workflow
on:
  push:
    branches:
      - main  # Trigger workflow on pushes to the main branch
    paths-ignore:
      - 'README.md'  # Ensure README changes don't trigger a rebuild
      - 'LICENSE'  # License changes are unlikely to affect the Docker build
      - '.dockerignore'  # Dockerignore changes generally won't affect the image content itself
      - '.gitignore'  # Gitignore changes shouldn't affect the image
      - '.github/workflows/**'  # Changes to workflows should not trigger Docker image build
      - 'pdf_files_to_parse/**'  # Input files are dynamic and shouldn't trigger image rebuilds
      - 'output_files/**'  # Output files shouldn't trigger image rebuilds

      - '!.github/workflows/docker-publish.yml'  # Exclude this specific workflow

# Define environment variables used throughout the workflow
env:
  DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}  # Docker Hub username stored in GitHub secrets
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}  # Docker Hub token stored in GitHub secrets
  DOCKER_REGISTRY: docker.io  # Docker registry URL
  RELEASE_TAG: v1.1.0  # Release tag for versioning the Docker images
  
# Define the jobs to build and publish the Docker images
jobs:
  # Job for building and publishing the parser image
  build-and-publish-parser:
    runs-on: ubuntu-24.04

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx for building multi-platform images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      # Step 4: Build and push the Docker image for the parser
      - name: Build and push Docker image (Parser)
        uses: docker/build-push-action@v4
        with:
          context: ./asc606-pdf-parser-app  # Directory for the parser app
          file: ./asc606-pdf-parser-app/Dockerfile.pdf-parser
          push: true
          tags: |
            benjisho/asc606-pdf-parser:latest
            benjisho/asc606-pdf-parser:${{ github.ref_name }}
            benjisho/asc606-pdf-parser:${{ env.RELEASE_TAG }}

      # Step 5: Log out from Docker Hub
      - name: Log out from Docker Hub
        run: docker logout

  # Job for building and publishing the website image
  build-and-publish-website:
    runs-on: ubuntu-24.04

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx for building multi-platform images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      # Step 4: Build and push the Docker image for the website
      - name: Build and push Docker image (Website)
        uses: docker/build-push-action@v4
        with:
          context: ./asc606-pdf-parser-website  # Directory for the website
          file: ./asc606-pdf-parser-website/Dockerfile.website
          push: true
          tags: |
            benjisho/asc606-pdf-parser-website:latest
            benjisho/asc606-pdf-parser-website:${{ github.ref_name }}
            benjisho/asc606-pdf-parser-website:${{ env.RELEASE_TAG }}

      # Step 5: Log out from Docker Hub
      - name: Log out from Docker Hub
        run: docker logout
